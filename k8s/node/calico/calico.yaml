# Calico Version v3.0.1
# https://docs.projectcalico.org/v3.0/releases#v3.0.1
# This manifest includes the following component versions:
#   calico/node:v3.0.1
#   calico/cni:v2.0.0
#   calico/kube-controllers:v2.0.0

# This ConfigMap is used to configure a self-hosted Calico installation.
kind: ConfigMap
apiVersion: v1
metadata:
  name: calico-config
  namespace: kube-system
data:
  # Configure this with the location of your etcd cluster.
  etcd_endpoints: "https://192.168.57.2:2379,https://192.168.57.3:2379,https://192.168.57.4:2379"

  # Configure the Calico backend to use.
  calico_backend: "bird"

  # The CNI network configuration to install on each node.
  cni_network_config: |-
    {
      "name": "k8s-pod-network",
      "cniVersion": "0.3.0",
      "plugins": [
        {
            "type": "calico",
            "etcd_endpoints": "__ETCD_ENDPOINTS__",
            "etcd_key_file": "__ETCD_KEY_FILE__",
            "etcd_cert_file": "__ETCD_CERT_FILE__",
            "etcd_ca_cert_file": "__ETCD_CA_CERT_FILE__",
            "log_level": "info",
            "mtu": 1500,
            "ipam": {
                "type": "calico-ipam"
            },
            "policy": {
                "type": "k8s",
                "k8s_api_root": "https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__",
                "k8s_auth_token": "__SERVICEACCOUNT_TOKEN__"
            },
            "kubernetes": {
                "kubeconfig": "__KUBECONFIG_FILEPATH__"
            }
        },
        {
          "type": "portmap",
          "snat": true,
          "capabilities": {"portMappings": true}
        }
      ]
    }

  # If you're using TLS enabled etcd uncomment the following.
  # You must also populate the Secret below with these files.
  # etcd_ca: "/etc/etcd/certs/base/ca.pem"   # "/calico-secrets/etcd-ca"
  # etcd_cert: "/etc/etcd/certs/client/client.pem" # "/calico-secrets/etcd-cert"
  # etcd_key: "/etc/etcd/certs/client/client-key.pem"  # "/calico-secrets/etcd-key"
  etcd_ca: "/calico-secrets/etcd-ca"
  etcd_cert: "/calico-secrets/etcd-cert"
  etcd_key: "/calico-secrets/etcd-key"
---

# The following contains k8s Secrets for use with a TLS enabled etcd cluster.
# For information on populating Secrets, see http://kubernetes.io/docs/user-guide/secrets/
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: calico-etcd-secrets
  namespace: kube-system
data:
  # Populate the following files with etcd TLS configuration if desired, but leave blank if
  # not using TLS for etcd.
  # This self-hosted install expects three files with the following names.  The values
  # should be base64 encoded strings of the entire contents of each file.
  # etcd-key: null
  # etcd-cert: null
  # etcd-ca: null
  etcd_ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjakNDQWxxZ0F3SUJBZ0lVTUFGOFpMcjVMakxQR1VYeWJjSVVKbGEra1ZBd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1B6RUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWNUQjBKbGFXcHBibWN4RHpBTkJnTlZCQW9UQm5SaAphM1Z6YnpFTk1Bc0dBMVVFQXhNRVpYUmpaREFlRncweE9EQXlNRE13TnpJeU1EQmFGdzB5TXpBeU1ESXdOekl5Ck1EQmFNRDh4Q3pBSkJnTlZCQVlUQWtOT01SQXdEZ1lEVlFRSEV3ZENaV2xxYVc1bk1ROHdEUVlEVlFRS0V3WjAKWVd0MWMyOHhEVEFMQmdOVkJBTVRCR1YwWTJRd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFSwpBb0lCQVFDOXpRM3A2OWN0M3R4YTRGOVdsZnZWRi9BNTFpYVFFVFo3RzdhSW9IbENJUTNJbUw4UnBkRDFMeDNOCis3MDZZMTBIMDB0MUNVNFJTQk9UZDJ5RXk0RWdBTUhFeEpWc1dPVjNtNjZOSnMrQnlaM3hZSk5NSi9DL1lVYTEKVHhhS0dEWndYZEliaUNKbjdlNFhMSTZDOHJiZlBncTJ4RFpZSFBoaDEvZG5xamlzR0RKd3JZSHhpMVNvWDdTdQpvMTBPcjA3aUw0OGgyQldydzV4NjBBS3Q0NFY3aXNnTzltb21xcTBLNDRsa2I0OXA3eWJ4djRraE5mOHNrdlExClVMRzJXOEUzODZZeGNETFpEZWdNZ2hNK2N4R3Q4L3F6TThPc2dHcUkzVzV5Nm83TUFHL0pPTmNiS09UZUU0VTQKT2t4WnBvWnAwd1A2R1BCaXRTVFBtdVcvSlpoYkFnTUJBQUdqWmpCa01BNEdBMVVkRHdFQi93UUVBd0lCQmpBUwpCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUNNQjBHQTFVZERnUVdCQlRWR1NxNHVnM0o4SFpqTS9FYkpLUVduNDBjClhqQWZCZ05WSFNNRUdEQVdnQlRWR1NxNHVnM0o4SFpqTS9FYkpLUVduNDBjWGpBTkJna3Foa2lHOXcwQkFRc0YKQUFPQ0FRRUFieUlpWUU4RGJkWXEzempGcFUrdUQ0bUJXN2R3UjdYZEd6dWRoU2hrMjRVYnViN25RcXZzaUd2cgpQblFXMUk0elB4SkpVQTl2QjBRcHlYWlBadUgyWnVVeXF1b0JJNXVaVlkzWGpHOGEza25IK3RISzlwWG8yR2xuClRzUHZEMGs3bFl2amY3ZDVkOEppSlMrQm1wcUMyTGxxUW1OdXVQaFNtNlVVZ1ZFMkFtQ2xnbWlnQ3g1ODlhcjAKRmNRQ3dnY29iRVVpQlZOY1FGeURvN1RIcURUckk2am45QVFBQ0hwNnZRT0ZpNTNRNTFyWGs1STFLcFRienI5dwo2MzhrTGpiV0V0MEtEQTlhQUFXdnJUYzRFWklsRnFJK25qTVBIL1p1NVgxMVdxTjRaTTB6V3BXSFZsSGVDbWhQCksrdzBhS2d1c3Bka0tTVE5jalNGWERobFFzcy9mUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  etcd_cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURoRENDQW15Z0F3SUJBZ0lVSHdNVmM3Q2lDWUhvRUNnSE9sdTR3ZmZNWElBd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1B6RUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWNUQjBKbGFXcHBibWN4RHpBTkJnTlZCQW9UQm5SaAphM1Z6YnpFTk1Bc0dBMVVFQXhNRVpYUmpaREFlRncweE9EQXlNRE13TnpReE1EQmFGdzB5TXpBeU1ESXdOelF4Ck1EQmFNRUl4Q3pBSkJnTlZCQVlUQWtOT01SQXdEZ1lEVlFRSUV3ZENaV2xxYVc1bk1SQXdEZ1lEVlFRSEV3ZEMKWldscWFXNW5NUTh3RFFZRFZRUURFd1pqYkdsbGJuUXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBdwpnZ0VLQW9JQkFRRE0wTlU2cHFTcDJZbHUzWENsL3FkNWNOZWZUMERqQTgyQTdtQm15NW12YnFXdTIrVm5oUzVKCitGRkx2N1NCWWloSHlzU0hmZXVFMGw3bGlWVFhyWER6ME16dmNuOGxiS3RCTkJzTkRLS054TkkrckFsQVBNa1YKbk0rWVFKK3V5MTBlSUJMVm9WS00zUnFDcDRGR0E2NTBHaDdBQVRmSmN5emNjb0RRaDNjc2tOK1VoT01rVjJZQgoyK1lPZC9ic010MmJXNnlqc3FVTit2MFFrbmE3M2V3Q1YvZk1EcWhOREhtRHBRUlh1ZXRLcFRkbjVSLzRtUlZ1Cjc4NHJtSnlZV0F3dHJsN2xOa0FiZ1JrVEZ1NWdGR2lqc01XVFRoSUFrcXhkUnVpVE5WRnlhY1k5NDhiNXlqTHAKKzM2QnJ5STNZWXNvK0pYZlBSK3lVOTZWY2xoZnYvTUxBZ01CQUFHamRUQnpNQTRHQTFVZER3RUIvd1FFQXdJRgpvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlF2CmpyR1k2KzluOVhsRFAyRjVMNTlnczlTN1pEQWZCZ05WSFNNRUdEQVdnQlRWR1NxNHVnM0o4SFpqTS9FYkpLUVcKbjQwY1hqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFjd1ZXS0ZzSjZGcHJmcnRLTkh3VXBhSUZBSk9VT0VkbQpiQ3k4aHkwOEtuR1JwRlJGcEUxSE83c2FCZGJnRWEvTFdqVFNSTEpMdEtKMDV6b1VCV3RzRHF4SnE4clRuTmNPCmJaZlg2K2VKZm9ZWTBKalpIR2w4SElUektaNzdtYnZFKzRETVd4N0EzNjFyUXIybnF3WGxUWVQyVEJyMXZrRUYKdjhLUUZIcnU5akQ4bkFVdjdxRlNKeDh5eWdCVkRlVTh6SW1zdGpUM0o1UjZ1Zk1uUE41bFlvdGpKT053M21DdgpLRUVOM3Y2Vld1djl6ZVQ2WGtsaFhQajlLRldCTm5RVG4rZWRnYTNLN0RBYnQzT0ZtWkRGR2UyTDRNSzUwZXZCCm5pajZvQ3RtSzlxT01BZUlVS0hjUnhrS01sSm0vdjA1SkxWUmNQYVNvK3kxRmVEa1JuZWxOQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  etcd_key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBek5EVk9xYWtxZG1KYnQxd3BmNm5lWERYbjA5QTR3UE5nTzVnWnN1WnIyNmxydHZsClo0VXVTZmhSUzcrMGdXSW9SOHJFaDMzcmhOSmU1WWxVMTYxdzg5RE03M0ovSld5clFUUWJEUXlpamNUU1Bxd0oKUUR6SkZaelBtRUNmcnN0ZEhpQVMxYUZTak4wYWdxZUJSZ091ZEJvZXdBRTN5WE1zM0hLQTBJZDNMSkRmbElUagpKRmRtQWR2bURuZjI3RExkbTF1c283S2xEZnI5RUpKMnU5M3NBbGYzekE2b1RReDVnNlVFVjduclNxVTNaK1VmCitKa1ZidS9PSzVpY21GZ01MYTVlNVRaQUc0RVpFeGJ1WUJSb283REZrMDRTQUpLc1hVYm9relZSY21uR1BlUEcKK2NveTZmdCtnYThpTjJHTEtQaVYzejBmc2xQZWxYSllYNy96Q3dJREFRQUJBb0lCQVFDV0NaRjZZcU1UamJsQQp6dFQ3dE4zb2Q0SnRRTGlPMUxWUmNzNkozekpaTWx3TENTazNPWGZjVmh6dnVhSzRlVGg2eHc1TEZ6SlYzV29KCkNoNXQxSzkrM0lHVUV6TVRMbFVSOGVLekg0TmhDVUxmQ0ZYS2lmemdhVHdtRTRrbW1mRS81VTBHMUNQTjd4YkIKaVlXSXpaK1ppNXpsR0w5T1FxSWxaM2YzeXBUQnZwc3pvRlJHNjFiTFh5alBPNlBRZGhnMnVBNngzb3hteng3UQpWaGRWTlBNbm1tVHFZYVJvU0hvWjByQXZ5YTRGdS9nb0xPc0NLcHNrbjZjSlNOVXY5MGxCWmFsWVJsK1NZTFRzCktaUlRXdUFCSkVoaG1SajRvTEpZTlBPbHgzSGdNckJ6bjJQY3ZFVm8xQWRWU0Y2SGJBb241VXlyUGpnZ1VLYU0KSlUwS3JIT3hBb0dCQVBDc05CSzQwNDlrcFBRbUkrUUpKSkpuOXlIcWRnbkxuNkVjZGJqM1dkTG15LzN0dW1QNwpHUlRsN1c3VXg3d1d0WEFYSEZpMVVDL2hEemlGTVVxcS9Qc09nSjFJZ3ZRb0VUZVZ4dDhRcWpRYWZYby9zeGZPCnJvYmQyQnFaYitWQk9aYlFjd21aV3psaHpRb0pncURhdThZR0htZVY5VFN2cUFZRXU3RlZsOFFaQW9HQkFObmMKQ2E1cmNVQllYU0Q2c2liaDlUWlNBUlM4UlFEaTRPK29JZUluWmJVSnYvYXFPVldhUkxyN2Qwd2dHZTFpT0tsWApmSlFPVk5ibnNqb2hxcUNub2dpaWFHeUx0UzRJVTkreGRkVGFLVDZzTUlvN2xnUGxWNHlLVWVOY0dWTEtjbmZSClRoLy9Ya29CeXkwOUM1R0pOazkvOStmU2FHYU95T3lGSEhONTVMVERBb0dBQ0NyUDJaTE1HeUdmTjJuVDdma2gKZEpaeW5JUUlYV3k3amd3Wk1wMnlQcVgyWmplYkM2bUp3RnZOSXVXMW9YeGp5OW44N0VXNjR1VVFUeXExOFlLNwo4d2thOUR0eHRqZGwzaTBIQXFyZUc4YUtXNHV0MkREN1d6aE1EUnNINFEvRmxJaWVYc1VGZzN6K0tFa0tWY3NXCmRESGc5a0x3ZjBrMnVuMk9vUVgya0lFQ2dZQmJ0eHlFUjBzb01Zc1RSVGNXMDIxdDd0dnhwTWpQOUxPSmNSakMKb3A5WXRjQVEwZHpOUXVMSWJQRHVKVjJFNkNLK2Q4eEVjRHdiTlBOOU1Zc3BreWpOeGNGOFlOeG5ncTM4c0RMUQo1djhTR1Y5ZDhuUFhOQWZGYkwzSW40OHhvWFRMS0Z4aGNCcDd3WUdOaS9PQTAyai8wdm5FcUhtM0kwbEcrVXJlCittUGtEUUtCZ0d5Zm1xeWxzSy9zdFZQVk1BV01YRnY0cTlQdm9ZcjhCQWgwU3dPOEtqWTFwbHUxdnhnT01MTEkKd25Fb2tUd1JWZGdOOHVEUFVmY2lUSnowZWF2VW1uRUhNakJDY1hvTkphMXNFNnJTV3RNeXdSYmlGRGpFbHNtVApSdWFjUEdjUmNmVU1mZTRyUWZid3lMZVBzSzlyd2dHazhXZ2plcVZHNXQxQVpnYjc4RnJPCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---

# This manifest installs the calico/node container, as well
# as the Calico CNI plugins and network config on
# each master and worker node in a Kubernetes cluster.
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: calico-node
  namespace: kube-system
  labels:
    k8s-app: calico-node
spec:
  selector:
    matchLabels:
      k8s-app: calico-node
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        k8s-app: calico-node
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: |
          [{"key": "dedicated", "value": "master", "effect": "NoSchedule" },
           {"key":"CriticalAddonsOnly", "operator":"Exists"}]
    spec:
      hostNetwork: true
      serviceAccountName: calico-node
      # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a "force
      # deletion": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.
      terminationGracePeriodSeconds: 0
      containers:
        # Runs calico/node container on each Kubernetes node.  This
        # container programs network policy and routes on each
        # host.
        # - name: calico-node
        #   image: quay.io/calico/node:v3.0.1
        #   env:
        #     # The location of the Calico etcd cluster.
        #     - name: ETCD_ENDPOINTS
        #       valueFrom:
        #         configMapKeyRef:
        #           name: calico-config
        #           key: etcd_endpoints
        #     # Choose the backend to use.
        #     - name: CALICO_NETWORKING_BACKEND
        #       valueFrom:
        #         configMapKeyRef:
        #           name: calico-config
        #           key: calico_backend
        #     # Cluster type to identify the deployment type
        #     - name: CLUSTER_TYPE
        #       value: "k8s,bgp"
        #     # Disable file logging so `kubectl logs` works.
        #     - name: CALICO_DISABLE_FILE_LOGGING
        #       value: "true"
        #     # Set noderef for node controller.
        #     - name: CALICO_K8S_NODE_REF
        #       valueFrom:
        #         fieldRef:
        #           fieldPath: spec.nodeName
        #     # Set Felix endpoint to host default action to ACCEPT.
        #     - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
        #       value: "ACCEPT"
        #     - name: IP_AUTODETECTION_METHOD
        #       value: "interface=enp0s8"
        #     # Configure the IP Pool from which Pod IPs will be chosen.
        #     - name: CALICO_IPV4POOL_CIDR
        #       value: "10.254.0.0/16"
        #     - name: CALICO_IPV4POOL_IPIP
        #       value: "off"
        #     # Disable IPv6 on Kubernetes.
        #     - name: FELIX_IPV6SUPPORT
        #       value: "false"
        #     # Set Felix logging to "info"
        #     - name: FELIX_LOGSEVERITYSCREEN
        #       value: "info"
        #     # Set MTU for tunnel device used if ipip is enabled
        #     - name: FELIX_IPINIPMTU
        #       value: "1440"
        #     # Location of the CA certificate for etcd.
        #     - name: ETCD_CA_CERT_FILE
        #       valueFrom:
        #         configMapKeyRef:
        #           name: calico-config
        #           key: etcd_ca
        #     # Location of the client key for etcd.
        #     - name: ETCD_KEY_FILE
        #       valueFrom:
        #         configMapKeyRef:
        #           name: calico-config
        #           key: etcd_key
        #     # Location of the client certificate for etcd.
        #     - name: ETCD_CERT_FILE
        #       valueFrom:
        #         configMapKeyRef:
        #           name: calico-config
        #           key: etcd_cert
        #     # Auto-detect the BGP IP address.
        #     - name: IP
        #       value: "autodetect"
        #     - name: FELIX_HEALTHENABLED
        #       value: "true"
        #   securityContext:
        #     privileged: true
        #   resources:
        #     requests:
        #       cpu: 250m
        #   livenessProbe:
        #     httpGet:
        #       path: /liveness
        #       port: 9099
        #     periodSeconds: 10
        #     initialDelaySeconds: 10
        #     failureThreshold: 6
        #   readinessProbe:
        #     httpGet:
        #       path: /readiness
        #       port: 9099
        #     periodSeconds: 10
        #   volumeMounts:
        #     - mountPath: /lib/modules
        #       name: lib-modules
        #       readOnly: true
        #     - mountPath: /var/run/calico
        #       name: var-run-calico
        #       readOnly: false
        #     - mountPath: /calico-secrets
        #       name: etcd-certs
        # This container installs the Calico CNI binaries
        # and CNI network config file on each node.
        - name: install-cni
          image: quay.io/calico/cni:v2.0.0
          command: ["/install-cni.sh"]
          env:
            # Name of the CNI config file to create.
            - name: CNI_CONF_NAME
              value: "10-calico.conflist"
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # The CNI network config to install on each node.
            - name: CNI_NETWORK_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: cni_network_config
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
            - mountPath: /host/etc/cni/net.d
              name: cni-net-dir
            - mountPath: /calico-secrets
              name: etcd-certs
      volumes:
        # Used by calico/node.
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: var-run-calico
          hostPath:
            path: /var/run/calico
        # Used to install CNI.
        - name: cni-bin-dir
          hostPath:
            path: /opt/cni/bin
        - name: cni-net-dir
          hostPath:
            path: /etc/cni/net.d
        # Mount in the etcd TLS secrets.
        - name: etcd-certs
          secret:
            secretName: calico-etcd-secrets

---

# This manifest deploys the Calico Kubernetes controllers.
# See https://github.com/projectcalico/kube-controllers
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: calico-kube-controllers
  namespace: kube-system
  labels:
    k8s-app: calico-kube-controllers
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ''
    scheduler.alpha.kubernetes.io/tolerations: |
      [{"key": "dedicated", "value": "master", "effect": "NoSchedule" },
       {"key":"CriticalAddonsOnly", "operator":"Exists"}]
spec:
  # The controllers can only have a single active instance.
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      name: calico-kube-controllers
      namespace: kube-system
      labels:
        k8s-app: calico-kube-controllers
    spec:
      # The controllers must run in the host network namespace so that
      # it isn't governed by policy that would prevent it from working.
      hostNetwork: true
      serviceAccountName: calico-kube-controllers
      containers:
        - name: calico-kube-controllers
          image: quay.io/calico/kube-controllers:v2.0.0
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # Location of the CA certificate for etcd.
            - name: ETCD_CA_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_ca
            # Location of the client key for etcd.
            - name: ETCD_KEY_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_key
            # Location of the client certificate for etcd.
            - name: ETCD_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_cert
            # Choose which controllers to run.
            - name: ENABLED_CONTROLLERS
              value: policy,profile,workloadendpoint,node
          volumeMounts:
            # Mount in the etcd TLS secrets.
            - mountPath: /calico-secrets
              name: etcd-certs
      volumes:
        # Mount in the etcd TLS secrets.
        - name: etcd-certs
          secret:
            secretName: calico-etcd-secrets

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-kube-controllers
  namespace: kube-system

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-node
  namespace: kube-system